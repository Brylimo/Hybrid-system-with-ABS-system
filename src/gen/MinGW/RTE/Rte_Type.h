/** @file     Rte_Type.h
  *
  * @brief    RTE type definitions
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS GmbH  RTA-RTE v5.10.0  (R4.0 backend version: v7.10.4 (Build 52732))
  */

#ifndef RTE_TYPE_H
#define RTE_TYPE_H

#include "Rte.h"
#include "Rte_Cfg.h"

/*******************************************************
 ***
 *** Forward Declarations
 ***
 *******************************************************/

struct Rte_CDS_ACT_HYDRAULIC_MODULATOR_FRONTL_COMP;
struct Rte_CDS_ACT_HYDRAULIC_MODULATOR_FRONTR_COMP;
struct Rte_CDS_ACT_HYDRAULIC_MODULATOR_REARL_COMP;
struct Rte_CDS_ACT_HYDRAULIC_MODULATOR_REARR_COMP;
struct Rte_CDS_ACT_MOTOR_COMP;
struct Rte_CDS_APP_BRAKE_CONTROLL_COMP;
struct Rte_CDS_APP_MOTOR_COMP;
struct Rte_CDS_AccelControlAPP;
struct Rte_CDS_AccelPedalSen;
struct Rte_CDS_AvgSpeed;
struct Rte_CDS_BrakePedalSen;
struct Rte_CDS_Cylinder_Sen;
struct Rte_CDS_ECU_ABS;
struct Rte_CDS_EngineApp;
struct Rte_CDS_Engine_Cycle_ACT;
struct Rte_CDS_Engine_Gear_ACT;
struct Rte_CDS_GearModeSen;
struct Rte_CDS_SEN_BATT_COMP;
struct Rte_CDS_SpeedSen;

/*******************************************************
 ***
 *** Types
 ***
 *******************************************************/

/* Information: No typedef for ImplementationDataType boolean because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType float32 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType float64 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType sint16 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType sint16_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint32 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType sint32_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType sint64 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType sint8 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType sint8_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint16_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint32 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType uint32_least because typeEmitter is a value other than RTE */

/* Information: No typedef for ImplementationDataType uint64 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType uint8 because the SwBaseType.nativeDeclaration is empty. */

/* Information: No typedef for ImplementationDataType uint8_least because typeEmitter is a value other than RTE */

typedef sint8 arr_sint8[5];
typedef struct {
   sint8           is_on;
   boolean         ignite;
   sint8           fuel_input;
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_ActSEngine_set_engine_QEType;

typedef struct {
   uint8 dummy;
} Rte_CPT_ECU_ABS_ActSEngine_set_engine_RtnQEType;

typedef struct {
   sint8           gear_value;
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_ActSGear_set_phygear_QEType;

typedef struct {
   uint8 dummy;
} Rte_CPT_ECU_ABS_ActSGear_set_phygear_RtnQEType;

typedef struct {
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_CS_BATT_Server_batt_sen_op_QEType;

typedef struct {
   uint8 batt_sen_data;
} Rte_CPT_ECU_ABS_CS_BATT_Server_batt_sen_op_RtnQEType;

typedef struct {
   sint16          motor_act_data;
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_CS_MOTOR_Server_motor_act_op_QEType;

typedef struct {
   uint8 dummy;
} Rte_CPT_ECU_ABS_CS_MOTOR_Server_motor_act_op_RtnQEType;

typedef struct {
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_PAccelPedal_get_AccelPedal_Status_QEType;

typedef struct {
   sint8 status;
} Rte_CPT_ECU_ABS_PAccelPedal_get_AccelPedal_Status_RtnQEType;

typedef struct {
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_PBrakePedal_get_BrakePedal_Status_QEType;

typedef struct {
   sint8 status;
} Rte_CPT_ECU_ABS_PBrakePedal_get_BrakePedal_Status_RtnQEType;

typedef struct {
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_PCylinder_get_cylinder_Status_QEType;

typedef struct {
   sint16 temperature;
   sint16 pressure;
} Rte_CPT_ECU_ABS_PCylinder_get_cylinder_Status_RtnQEType;

typedef struct {
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_PGearMode_get_Gear_Mode_QEType;

typedef struct {
   sint8 gear_mode;
} Rte_CPT_ECU_ABS_PGearMode_get_Gear_Mode_RtnQEType;

typedef struct {
   sint16          volt;
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_PHMFrontL_set_E_op_QEType;

typedef struct {
   uint8 dummy;
} Rte_CPT_ECU_ABS_PHMFrontL_set_E_op_RtnQEType;

typedef struct {
   sint16          volt;
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_PHMFrontR_set_E_op_QEType;

typedef struct {
   uint8 dummy;
} Rte_CPT_ECU_ABS_PHMFrontR_set_E_op_RtnQEType;

typedef struct {
   sint16          volt;
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_PHMRearL_set_E_op_QEType;

typedef struct {
   uint8 dummy;
} Rte_CPT_ECU_ABS_PHMRearL_set_E_op_RtnQEType;

typedef struct {
   sint16          volt;
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_PHMRearR_set_E_op_QEType;

typedef struct {
   uint8 dummy;
} Rte_CPT_ECU_ABS_PHMRearR_set_E_op_RtnQEType;

typedef struct {
   Rte_QCmnRefType clientQueue;
} Rte_CPT_ECU_ABS_PTireRPM_get_Tire_RPM_QEType;

typedef struct {
   sint16 frontleft;
   sint16 frontright;
   sint16 backleft;
   sint16 backright;
} Rte_CPT_ECU_ABS_PTireRPM_get_Tire_RPM_RtnQEType;

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ACT_HYDRAULIC_MODULATOR_FRONTL_COMP_CS_HM_FRONTL_set_E_op) (VAR(sint16, AUTOMATIC) volt);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ACT_HYDRAULIC_MODULATOR_FRONTR_COMP_CS_HM_FRONTR_set_E_op) (VAR(sint16, AUTOMATIC) volt);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ACT_HYDRAULIC_MODULATOR_REARL_COMP_CS_HM_REARL_set_E_op) (VAR(sint16, AUTOMATIC) volt);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ACT_HYDRAULIC_MODULATOR_REARR_COMP_CS_HM_REARR_set_E_op) (VAR(sint16, AUTOMATIC) volt);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_ACT_MOTOR_COMP_CS_MOTOR_ACT_motor_act_op) (VAR(sint16, AUTOMATIC) motor_act_data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_AccelPedalSen_CS_AccelPedal_Status_get_AccelPedal_Status) (CONSTP2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) status);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_BrakePedalSen_CS_BrakePedal_Status_get_BrakePedal_Status) (CONSTP2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) status);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Cylinder_Sen_CS_Cylinder_Status_get_cylinder_Status) (CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) temperature, CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) pressure);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Engine_Cycle_ACT_CS_Engine_set_engine) (VAR(sint8, AUTOMATIC) is_on, VAR(boolean, AUTOMATIC) ignite, VAR(sint8, AUTOMATIC) fuel_input);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_Engine_Gear_ACT_CS_PhyGear_set_phygear) (VAR(sint8, AUTOMATIC) gear_value);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_GearModeSen_CS_Gear_Mode_Status_get_Gear_Mode) (CONSTP2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) gear_mode);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_SEN_BATT_COMP_CS_BATT_SEN_batt_sen_op) (CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) batt_sen_data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_CallFP_SpeedSen_CS_Tire_RPM_Status_get_Tire_RPM) (CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) frontleft, CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) frontright, CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) backleft, CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) backright);

typedef P2FUNC(VAR(sint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_ACT_HYDRAULIC_MODULATOR_FRONTL_COMP_SR_E_FL_modedata) (void);

typedef P2FUNC(VAR(sint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_ACT_HYDRAULIC_MODULATOR_FRONTR_COMP_SR_E_FR_modedata) (void);

typedef P2FUNC(VAR(sint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_ACT_HYDRAULIC_MODULATOR_REARL_COMP_SR_E_RL_modedata) (void);

typedef P2FUNC(VAR(sint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_ACT_HYDRAULIC_MODULATOR_REARR_COMP_SR_E_RR_modedata) (void);

typedef P2FUNC(VAR(sint16, AUTOMATIC), RTE_CODE, Rte_DReadFP_ACT_MOTOR_COMP_SR_MOTOR_SPEED_motor_speed_data) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_APP_BRAKE_CONTROLL_COMP_SR_SPEED_backleft) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_APP_BRAKE_CONTROLL_COMP_SR_SPEED_backright) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_APP_BRAKE_CONTROLL_COMP_SR_SPEED_frontleft) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_APP_BRAKE_CONTROLL_COMP_SR_SPEED_frontright) (void);

typedef P2FUNC(VAR(uint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_APP_MOTOR_COMP_SR_BATT_batt_data) (void);

typedef P2FUNC(VAR(sint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_APP_MOTOR_COMP_SR_PWM_pwm_data) (void);

typedef P2FUNC(VAR(sint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_AccelControlAPP_SR_Accel_AppValue_accel_value) (void);

typedef P2FUNC(VAR(float64, AUTOMATIC), RTE_CODE, Rte_DReadFP_AccelControlAPP_SR_AvgSpeed_avg_speed_data) (void);

typedef P2FUNC(VAR(sint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_AccelControlAPP_SR_Brake_AppValue_brake_value) (void);

typedef P2FUNC(VAR(sint8, AUTOMATIC), RTE_CODE, Rte_DReadFP_AccelControlAPP_SR_Gear_AppValue_gear_value) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_AvgSpeed_SR_Speeds_AppValue_backleft) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_AvgSpeed_SR_Speeds_AppValue_backright) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_AvgSpeed_SR_Speeds_AppValue_frontleft) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_AvgSpeed_SR_Speeds_AppValue_frontright) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_EngineApp_SR_Cylin_AppValue_pressure) (void);

typedef P2FUNC(VAR(float32, AUTOMATIC), RTE_CODE, Rte_DReadFP_EngineApp_SR_Cylin_AppValue_temperature) (void);

typedef P2FUNC(VAR(sint16, AUTOMATIC), RTE_CODE, Rte_DReadFP_EngineApp_SR_EnginePower_powerValue) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_ReadFP_Engine_Cycle_ACT_SR_cylinderActInfo_infoArray) (CONSTP2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2CONST(struct Rte_CDS_ACT_HYDRAULIC_MODULATOR_FRONTL_COMP,AUTOMATIC,RTE_CONST) Rte_SelfType_ACT_HYDRAULIC_MODULATOR_FRONTL_COMP;

typedef P2CONST(struct Rte_CDS_ACT_HYDRAULIC_MODULATOR_FRONTR_COMP,AUTOMATIC,RTE_CONST) Rte_SelfType_ACT_HYDRAULIC_MODULATOR_FRONTR_COMP;

typedef P2CONST(struct Rte_CDS_ACT_HYDRAULIC_MODULATOR_REARL_COMP,AUTOMATIC,RTE_CONST) Rte_SelfType_ACT_HYDRAULIC_MODULATOR_REARL_COMP;

typedef P2CONST(struct Rte_CDS_ACT_HYDRAULIC_MODULATOR_REARR_COMP,AUTOMATIC,RTE_CONST) Rte_SelfType_ACT_HYDRAULIC_MODULATOR_REARR_COMP;

typedef P2CONST(struct Rte_CDS_ACT_MOTOR_COMP,AUTOMATIC,RTE_CONST) Rte_SelfType_ACT_MOTOR_COMP;

typedef P2CONST(struct Rte_CDS_APP_BRAKE_CONTROLL_COMP,AUTOMATIC,RTE_CONST) Rte_SelfType_APP_BRAKE_CONTROLL_COMP;

typedef P2CONST(struct Rte_CDS_APP_MOTOR_COMP,AUTOMATIC,RTE_CONST) Rte_SelfType_APP_MOTOR_COMP;

typedef P2CONST(struct Rte_CDS_AccelControlAPP,AUTOMATIC,RTE_CONST) Rte_SelfType_AccelControlAPP;

typedef P2CONST(struct Rte_CDS_AccelPedalSen,AUTOMATIC,RTE_CONST) Rte_SelfType_AccelPedalSen;

typedef P2CONST(struct Rte_CDS_AvgSpeed,AUTOMATIC,RTE_CONST) Rte_SelfType_AvgSpeed;

typedef P2CONST(struct Rte_CDS_BrakePedalSen,AUTOMATIC,RTE_CONST) Rte_SelfType_BrakePedalSen;

typedef P2CONST(struct Rte_CDS_Cylinder_Sen,AUTOMATIC,RTE_CONST) Rte_SelfType_Cylinder_Sen;

typedef P2CONST(struct Rte_CDS_ECU_ABS,AUTOMATIC,RTE_CONST) Rte_SelfType_ECU_ABS;

typedef P2CONST(struct Rte_CDS_EngineApp,AUTOMATIC,RTE_CONST) Rte_SelfType_EngineApp;

typedef P2CONST(struct Rte_CDS_Engine_Cycle_ACT,AUTOMATIC,RTE_CONST) Rte_SelfType_Engine_Cycle_ACT;

typedef P2CONST(struct Rte_CDS_Engine_Gear_ACT,AUTOMATIC,RTE_CONST) Rte_SelfType_Engine_Gear_ACT;

typedef P2CONST(struct Rte_CDS_GearModeSen,AUTOMATIC,RTE_CONST) Rte_SelfType_GearModeSen;

typedef P2CONST(struct Rte_CDS_SEN_BATT_COMP,AUTOMATIC,RTE_CONST) Rte_SelfType_SEN_BATT_COMP;

typedef P2CONST(struct Rte_CDS_SpeedSen,AUTOMATIC,RTE_CONST) Rte_SelfType_SpeedSen;

typedef P2FUNC(void, RTE_CODE, Rte_TriggerFP_APP_MOTOR_COMP_TR_BATT_LOW_low) (void);

typedef P2FUNC(void, RTE_CODE, Rte_TriggerFP_APP_MOTOR_COMP_TR_BATT_LOW_normal) (void);

typedef P2FUNC(void, RTE_CODE, Rte_TriggerFP_EngineApp_Tirg_PhyGearLevel_ActInfo_level1) (void);

typedef P2FUNC(void, RTE_CODE, Rte_TriggerFP_EngineApp_Tirg_PhyGearLevel_ActInfo_level2) (void);

typedef P2FUNC(void, RTE_CODE, Rte_TriggerFP_EngineApp_Tirg_PhyGearLevel_ActInfo_level3) (void);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_APP_BRAKE_CONTROLL_COMP_SR_E_FL_modedata) (VAR(sint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_APP_BRAKE_CONTROLL_COMP_SR_E_FR_modedata) (VAR(sint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_APP_BRAKE_CONTROLL_COMP_SR_E_RL_modedata) (VAR(sint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_APP_BRAKE_CONTROLL_COMP_SR_E_RR_modedata) (VAR(sint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_APP_MOTOR_COMP_SR_MOTOR_SPEED_motor_speed_data) (VAR(sint16, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_AccelControlAPP_SR_EnginePower_powerValue) (VAR(sint16, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_AccelControlAPP_SR_PWM_pwm_data) (VAR(sint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_AccelPedalSen_SR_Accel_AppValue_accel_value) (VAR(sint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_AvgSpeed_SR_AvgSpeed_avg_speed_data) (VAR(float64, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_BrakePedalSen_SR_Brake_AppValue_brake_value) (VAR(sint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Cylinder_Sen_SR_Cylin_AppValue_pressure) (VAR(float32, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_Cylinder_Sen_SR_Cylin_AppValue_temperature) (VAR(float32, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_EngineApp_SR_cylinderActInfo_infoArray) (P2CONST(sint8, AUTOMATIC, RTE_APPL_DATA) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_GearModeSen_SR_Gear_AppValue_gear_value) (VAR(sint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_SEN_BATT_COMP_SR_BATT_batt_data) (VAR(uint8, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_SpeedSen_SR_Speeds_AppValue_backleft) (VAR(float32, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_SpeedSen_SR_Speeds_AppValue_backright) (VAR(float32, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_SpeedSen_SR_Speeds_AppValue_frontleft) (VAR(float32, AUTOMATIC) data);

typedef P2FUNC(VAR(Std_ReturnType, AUTOMATIC), RTE_CODE, Rte_WriteFP_SpeedSen_SR_Speeds_AppValue_frontright) (VAR(float32, AUTOMATIC) data);


#endif /* !RTE_TYPE_H */

/** @file     Rte_ECU_ABS.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS GmbH  RTA-RTE v5.10.0  (R4.0 backend version: v7.10.4 (Build 52732))
  */

#ifndef RTE_ECU_ABS_H
#define RTE_ECU_ABS_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_ECU_ABS_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_ECU_ABS_BATT)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_RE_ECU_ABS_MOTOR)
#elif defined(RTE_RUNNABLEAPI_RE_PAccelPedal)
#elif defined(RTE_RUNNABLEAPI_RE_PBrakePedal)
#elif defined(RTE_RUNNABLEAPI_RE_PCylinder)
#elif defined(RTE_RUNNABLEAPI_RE_PGearMode)
#elif defined(RTE_RUNNABLEAPI_RE_PHMFrontL)
#elif defined(RTE_RUNNABLEAPI_RE_PHMFrontR)
#elif defined(RTE_RUNNABLEAPI_RE_PHMRearL)
#elif defined(RTE_RUNNABLEAPI_RE_PHMRearR)
#elif defined(RTE_RUNNABLEAPI_RE_PTireRPM)
#elif defined(RTE_RUNNABLEAPI_RE_SeverEngine)
#elif defined(RTE_RUNNABLEAPI_RE_SeverGear)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_ECU_ABS {
   uint8 _dummy;
};
typedef struct Rte_CDS_ECU_ABS Rte_CDS_ECU_ABS;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_ECU_ABS, RTE_CONST) Rte_Inst_ECU_ABS;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_ECU_ABS, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define ECU_ABS_START_SEC_CODE
#include "ECU_ABS_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, ECU_ABS_CODE) RE_ECU_ABS_BATT_func(CONSTP2VAR(uint8, AUTOMATIC, RTE_APPL_DATA) batt_sen_data);
FUNC(void, ECU_ABS_CODE) RE_ECU_ABS_MOTOR_func(VAR(sint16, AUTOMATIC) motor_act_data);
FUNC(void, ECU_ABS_CODE) RE_PAccelPedal_func(CONSTP2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) status);
FUNC(void, ECU_ABS_CODE) RE_PBrakePedal_func(CONSTP2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) status);
FUNC(void, ECU_ABS_CODE) RE_PCylinder_func(CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) temperature,
                                           CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) pressure);
FUNC(void, ECU_ABS_CODE) RE_PGearMode_func(CONSTP2VAR(sint8, AUTOMATIC, RTE_APPL_DATA) gear_mode);
FUNC(void, ECU_ABS_CODE) RE_PHMFrontL_func(VAR(sint16, AUTOMATIC) volt);
FUNC(void, ECU_ABS_CODE) RE_PHMFrontR_func(VAR(sint16, AUTOMATIC) volt);
FUNC(void, ECU_ABS_CODE) RE_PHMRearL_func(VAR(sint16, AUTOMATIC) volt);
FUNC(void, ECU_ABS_CODE) RE_PHMRearR_func(VAR(sint16, AUTOMATIC) volt);
FUNC(void, ECU_ABS_CODE) RE_PTireRPM_func(CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) frontleft,
                                          CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) frontright,
                                          CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) backleft,
                                          CONSTP2VAR(sint16, AUTOMATIC, RTE_APPL_DATA) backright);
FUNC(void, ECU_ABS_CODE) RE_SeverEngine_func(VAR(sint8, AUTOMATIC) is_on,
                                             VAR(boolean, AUTOMATIC) ignite,
                                             VAR(sint8, AUTOMATIC) fuel_input);
FUNC(void, ECU_ABS_CODE) RE_SeverGear_func(VAR(sint8, AUTOMATIC) gear_value);
#define ECU_ABS_STOP_SEC_CODE
#include "ECU_ABS_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_ECU_ABS_H */

/** @file     Rte_AccelControlAPP.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS GmbH  RTA-RTE v5.10.0  (R4.0 backend version: v7.10.4 (Build 52732))
  */

#ifndef RTE_ACCELCONTROLAPP_H
#define RTE_ACCELCONTROLAPP_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_AccelControlAPP_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_Control)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#elif defined(RTE_RUNNABLEAPI_RE_battary_is_low)
#elif defined(RTE_RUNNABLEAPI_RE_battary_is_normal)
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_AccelControlAPP {
   uint8 _dummy;
};
typedef struct Rte_CDS_AccelControlAPP Rte_CDS_AccelControlAPP;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_AccelControlAPP, RTE_CONST) Rte_Inst_AccelControlAPP;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_AccelControlAPP, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(sint8, RTE_CODE) Rte_DRead_AccelControlAPP_R_Accel_accel_value(void);
FUNC(sint8, RTE_CODE) Rte_DRead_AccelControlAPP_R_Brake_brake_value(void);
FUNC(sint8, RTE_CODE) Rte_DRead_AccelControlAPP_R_Gear_gear_value(void);
#define RTE_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(sint8, RTE_DATA) Rte_Rx_000010_pwm_data;
#define RTE_STOP_SEC_VAR_CLEARED_8
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_64
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float64, RTE_DATA) Rte_Rx_000012_avg_speed_data;
#define RTE_STOP_SEC_VAR_CLEARED_64
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(sint16, RTE_DATA) Rte_Rx_000017_powerValue;
#define RTE_STOP_SEC_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Control)
#define Rte_DRead_R_Accel_accel_value() (Rte_DRead_AccelControlAPP_R_Accel_accel_value())
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Control)
/* Inline read optimization; Rte_DRead_R_AvgSpeed_avg_speed_data to direct read */
#define Rte_DRead_R_AvgSpeed_avg_speed_data()  ( Rte_Rx_000012_avg_speed_data )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Control)
#define Rte_DRead_R_Brake_brake_value() (Rte_DRead_AccelControlAPP_R_Brake_brake_value())
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Control)
#define Rte_DRead_R_Gear_gear_value() (Rte_DRead_AccelControlAPP_R_Gear_gear_value())
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Control)
/* Inline Write optimization; Rte_Write_P_EnginePower_powerValue to direct write */
#define Rte_Write_P_EnginePower_powerValue( data ) ( (Rte_Rx_000017_powerValue = data), RTE_E_OK )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_Control)
/* Inline Write optimization; Rte_Write_P_PWM_pwm_data to direct write */
#define Rte_Write_P_PWM_pwm_data( data ) ( (Rte_Rx_000010_pwm_data = data), RTE_E_OK )
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define AccelControlAPP_START_SEC_CODE
#include "AccelControlAPP_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, AccelControlAPP_CODE) RE_Control_func(void);
FUNC(void, AccelControlAPP_CODE) RE_battary_is_low_func(void);
FUNC(void, AccelControlAPP_CODE) RE_battary_is_normal_func(void);
#define AccelControlAPP_STOP_SEC_CODE
#include "AccelControlAPP_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_ACCELCONTROLAPP_H */

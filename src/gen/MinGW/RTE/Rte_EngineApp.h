/** @file     Rte_EngineApp.h
  *
  * @brief    Application header file
  *
  * @note     AUTOMATICALLY GENERATED FILE! DO NOT EDIT!
  *
  * @note     Generated by ETAS GmbH  RTA-RTE v5.10.0  (R4.0 backend version: v7.10.4 (Build 52732))
  */

#ifndef RTE_ENGINEAPP_H
#define RTE_ENGINEAPP_H

#ifndef RTE_CORE
#ifdef RTE_APPLICATION_HEADER_FILE
#error Multiple application header files included.
#endif /* RTE_APPLICATION_HEADER_FILE */
#define RTE_APPLICATION_HEADER_FILE
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** Includes
 ***
 *******************************************************/

#include "Rte.h"
#include "Rte_Intl.h"
#include "Rte_EngineApp_Type.h"

#include "Rte_DataHandleType.h"

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#if defined(RTE_RUNNABLEAPI_RE_EngineApp)
   /* Do nothing for this and all elif clauses below (rte_sws_2751) */
#else
   /* None of above defined so define value including all APIs (rte_sws_2751) */
   #define RTE_PRV_ALL_API
#endif

/*******************************************************
 ***
 *** Constants
 ***
 *******************************************************/


/*******************************************************
 ***
 *** Public Types
 ***
 *******************************************************/

/* BEGIN: SWC types (core visible) */
struct Rte_CDS_EngineApp {
   uint8 _dummy;
};
typedef struct Rte_CDS_EngineApp Rte_CDS_EngineApp;
/* END: SWC types (core visible) */

/*******************************************************
 ***
 *** Private Types
 ***
 *******************************************************/

/* BEGIN: SWC types (private) */
/* END: SWC types (private) */

/*******************************************************
 ***
 *** Instance Declarations
 ***
 *******************************************************/

#define RTE_START_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern CONST(struct Rte_CDS_EngineApp, RTE_CONST) Rte_Inst_EngineApp;
#define RTE_STOP_SEC_CONST_UNSPECIFIED
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */


#ifndef RTE_CORE
typedef CONSTP2CONST(struct Rte_CDS_EngineApp, AUTOMATIC, RTE_CONST) Rte_Instance;
#endif /* RTE_CORE */

/*******************************************************
 ***
 *** API Mapping macros
 ***
 *******************************************************/

/* API Mapping Macros */
#ifndef RTE_CORE

#define RTE_START_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(Std_ReturnType, RTE_CODE) Rte_Write_EngineApp_CycleData_Pport_infoArray(P2CONST(sint8, AUTOMATIC, RTE_APPL_DATA) data);
FUNC(void, RTE_CODE) Rte_Trigger_EngineApp_PhyGear_Pport_level1(void);
FUNC(void, RTE_CODE) Rte_Trigger_EngineApp_PhyGear_Pport_level2(void);
FUNC(void, RTE_CODE) Rte_Trigger_EngineApp_PhyGear_Pport_level3(void);
#define RTE_STOP_SEC_CODE
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000015_pressure;
#define RTE_STOP_SEC_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(float32, RTE_DATA) Rte_Rx_000016_temperature;
#define RTE_STOP_SEC_VAR_CLEARED_32
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#define RTE_START_SEC_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
extern VAR(sint16, RTE_DATA) Rte_Rx_000017_powerValue;
#define RTE_STOP_SEC_VAR_CLEARED_16
#include "Rte_MemMap.h" /*lint !e537 permit multiple inclusion */
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_EngineApp)
/* Inline read optimization; Rte_DRead_Cylinder_Rport_pressure to direct read */
#define Rte_DRead_Cylinder_Rport_pressure()  ( Rte_Rx_000015_pressure )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_EngineApp)
/* Inline read optimization; Rte_DRead_Cylinder_Rport_temperature to direct read */
#define Rte_DRead_Cylinder_Rport_temperature()  ( Rte_Rx_000016_temperature )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_EngineApp)
/* Inline read optimization; Rte_DRead_Power_Rport_powerValue to direct read */
#define Rte_DRead_Power_Rport_powerValue()  ( Rte_Rx_000017_powerValue )
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_EngineApp)
#define Rte_Trigger_PhyGear_Pport_level1() (Rte_Trigger_EngineApp_PhyGear_Pport_level1())
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_EngineApp)
#define Rte_Trigger_PhyGear_Pport_level2() (Rte_Trigger_EngineApp_PhyGear_Pport_level2())
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_EngineApp)
#define Rte_Trigger_PhyGear_Pport_level3() (Rte_Trigger_EngineApp_PhyGear_Pport_level3())
#endif
#if defined(RTE_PRV_ALL_API) || defined(RTE_RUNNABLEAPI_RE_EngineApp)
#define Rte_Write_CycleData_Pport_infoArray( data ) (Rte_Write_EngineApp_CycleData_Pport_infoArray(data))
#endif

#endif /* RTE_CORE */

/*******************************************************
 ***
 *** RE Prototypes
 ***
 *******************************************************/

#define EngineApp_START_SEC_CODE
#include "EngineApp_MemMap.h" /*lint !e537 permit multiple inclusion */
FUNC(void, EngineApp_CODE) RE_EngineApp_func(void);
#define EngineApp_STOP_SEC_CODE
#include "EngineApp_MemMap.h" /*lint !e537 permit multiple inclusion */

/* Initial values for data element prototypes */

#ifdef __cplusplus
} /* extern C */
#endif /* __cplusplus */

#endif /* !RTE_ENGINEAPP_H */
